CREATE TABLE "admin" (
	"admin_id"	INTEGER NOT NULL,
	"admin_name"	TEXT UNIQUE,
	"password"	TEXT,
	PRIMARY KEY("admin_id" AUTOINCREMENT)
);

CREATE TABLE "album" (
	"album_id"	INTEGER NOT NULL,
	"album_name"	TEXT NOT NULL,
	"uploaded_by"	INTEGER NOT NULL,
	PRIMARY KEY("album_id" AUTOINCREMENT),
	FOREIGN KEY("uploaded_by") REFERENCES "user"("user_id")
);

CREATE TABLE "likes" (
	"song_id"	INTEGER NOT NULL,
	"user_id"	INTEGER NOT NULL,
	"up_down"	INTEGER DEFAULT 0,
	FOREIGN KEY("user_id") REFERENCES "user"("user_id"),
	FOREIGN KEY("song_id") REFERENCES "songs"("song_id"),
	PRIMARY KEY("song_id","user_id")
);

CREATE TABLE "playlist" (
	"playlist_id"	INTEGER NOT NULL,
	"user_id"	INTEGER NOT NULL,
	"playlist_name"	TEXT NOT NULL,
	FOREIGN KEY("user_id") REFERENCES "user"("user_id"),
	PRIMARY KEY("playlist_id" AUTOINCREMENT)
);

CREATE TABLE "playlist_data" (
	"playlist_id"	INTEGER NOT NULL,
	"song_id"	INTEGER NOT NULL,
	FOREIGN KEY("playlist_id") REFERENCES "playlist"("playlist_id"),
	FOREIGN KEY("song_id") REFERENCES "song"("song_id"),
	PRIMARY KEY("playlist_id","song_id")
);

CREATE TABLE "songs" (
	"song_id"	INTEGER,
	"song_name"	TEXT NOT NULL,
	"uploaded_by"	INT,
	"song"	BLOB,
	"albums"	INTEGER,
	"lyrics"	TEXT,
	"date"	datetime,
	"upvote"	integer,
	"downvote"	integer,
	FOREIGN KEY("uploaded_by") REFERENCES "user"("user_id"),
	FOREIGN KEY("albums") REFERENCES "albums"("album_id"),
	PRIMARY KEY("song_id" AUTOINCREMENT)
);

CREATE TABLE "user" (
	"user_id"	INTEGER,
	"user_name"	TEXT NOT NULL UNIQUE,
	"email"	TEXT NOT NULL UNIQUE,
	"password"	TEXT NOT NULL,
	"creator"	INTEGER NOT NULL,
	"name"	TEXT,
	"joined"	datetime,
	"flag"	integer,
	PRIMARY KEY("user_id" AUTOINCREMENT)
);